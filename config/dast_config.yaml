# DAST Continuous Monitoring Configuration

# Database settings
database: "dast_monitor.db"

# Concurrent scanning limits
max_concurrent_scans: 3

# Logging configuration
log_level: "INFO"
log_file: "dast_monitor.log"

# Scan scheduling based on priority
scan_schedules:
  high_priority: "0 */2 * * *"    # Every 2 hours (priority 4-5)
  medium_priority: "0 */6 * * *"  # Every 6 hours (priority 2-3)
  low_priority: "0 0 */1 * *"     # Daily (priority 1)

# ZAP configuration
zap:
  version: "2.14.0"
  timeout: 3600  # 1 hour timeout per scan
  memory: "2g"
  max_scan_time: 1800  # 30 minutes max active scan

# Grafana integration
grafana:
  enabled: true
  url: "http://localhost:3000"
  api_key: "${GRAFANA_API_KEY}"
  dashboard_id: "dast-monitor"
  datasource: "prometheus"
  
  # Metrics to send
  metrics:
    - "dast_scan_duration"
    - "dast_alerts_by_severity" 
    - "dast_scan_status"
    - "dast_targets_scanned"

# SIEM/SOAR integration
siem:
  enabled: false
  type: "webhook"  # webhook, splunk, elasticsearch
  webhook_url: "${SIEM_WEBHOOK_URL}"
  severity_threshold: "medium"  # high, medium, low, info
  
  # Additional SIEM configurations
  splunk:
    host: ""
    port: 8088
    token: "${SPLUNK_TOKEN}"
    index: "security"
  
  elasticsearch:
    hosts: ["localhost:9200"]
    index: "dast-alerts"
    auth:
      username: "${ES_USERNAME}"
      password: "${ES_PASSWORD}"

# Subdomain discovery
subdomain_discovery:
  enabled: true
  tools: 
    - "subfinder"
    - "assetfinder" 
    - "amass"
  update_frequency: "0 0 * * 0"  # Weekly on Sunday
  max_subdomains_per_domain: 50
  timeout: 300  # 5 minutes per tool
  
  # Tool-specific configurations
  subfinder:
    config_file: "subfinder-config.yaml"
    sources: "all"
  
  amass:
    config_file: "amass-config.ini"
    wordlist: "subdomains-top1million.txt"

# Report management
reports:
  retention_days: 90
  formats: ["json", "html", "xml", "sarif"]
  export_path: "./reports"
  
  # Remote storage options
  s3:
    enabled: false
    bucket: "${S3_BUCKET}"
    prefix: "dast-reports/"
    region: "us-east-1"
  
  # Report templates
  templates:
    executive_summary: true
    detailed_findings: true
    trend_analysis: true

# Vulnerability management integration
vulnerability_management:
  enabled: false
  
  # DefectDojo integration
  defectdojo:
    url: "${DEFECTDOJO_URL}"
    api_key: "${DEFECTDOJO_API_KEY}"
    product_id: 1
    engagement_id: 1
  
  # JIRA integration
  jira:
    url: "${JIRA_URL}"
    username: "${JIRA_USERNAME}"
    api_token: "${JIRA_API_TOKEN}"
    project_key: "SEC"
    issue_type: "Bug"

# Notification settings
notifications:
  enabled: true
  
  # Email notifications
  email:
    enabled: false
    smtp_host: "smtp.gmail.com"
    smtp_port: 587
    username: "${EMAIL_USERNAME}"
    password: "${EMAIL_PASSWORD}"
    from_address: "dast-monitor@company.com"
    to_addresses: ["security-team@company.com"]
  
  # Slack notifications
  slack:
    enabled: true
    webhook_url: "${SLACK_WEBHOOK_URL}"
    channel: "#security-alerts"
    severity_threshold: "medium"
    message_format: "attachments"  # "attachments" or "blocks"
  
  # Google Chat notifications
  google_chat:
    enabled: true
    webhook_url: "${GOOGLE_CHAT_WEBHOOK_URL}"
    space_name: "Security Monitoring"
    bot_name: "DAST Monitor"
    severity_threshold: "medium"
    message_style: "card"  # "simple", "card", "rich"
    thread_alerts: true  # Group related alerts in threads
    include_remediation: true
    max_card_fields: 10
  
  # Microsoft Teams
  teams:
    enabled: false
    webhook_url: "${TEAMS_WEBHOOK_URL}"

# Performance optimization
performance:
  # Scan optimization
  scan_optimization:
    enabled: true
    skip_static_content: true
    max_crawl_depth: 5
    max_crawl_children: 100
    request_delay: 100  # milliseconds
    
  # Resource limits
  resource_limits:
    max_memory_per_scan: "4g"
    max_cpu_per_scan: 2
    disk_space_threshold: "10GB"

# Security settings
security:
  # Authentication for API access
  api_auth:
    enabled: true
    method: "token"  # token, basic, oauth2
    tokens:
      - name: "admin"
        token: "${ADMIN_API_TOKEN}"
        permissions: ["read", "write", "admin"]
      - name: "readonly"
        token: "${READONLY_API_TOKEN}" 
        permissions: ["read"]
  
  # Network security
  network:
    allowed_ips: ["127.0.0.1", "10.0.0.0/8"]
    rate_limiting:
      enabled: true
      requests_per_minute: 60

# CI/CD Integration
cicd:
  enabled: true
  
  # Quality gates
  quality_gates:
    fail_on_high: true
    fail_on_medium: false
    max_alerts_threshold: 50
    
  # Pipeline integration
  jenkins:
    webhook_url: "${JENKINS_WEBHOOK_URL}"
    job_token: "${JENKINS_JOB_TOKEN}"
  
  github_actions:
    token: "${GITHUB_TOKEN}"
    repository: "company/security-scans"
  
  gitlab:
    url: "${GITLAB_URL}"
    token: "${GITLAB_TOKEN}"
    project_id: 123

# Target-specific configurations
target_profiles:
  web_application:
    scan_type: "standard"
    authentication:
      enabled: false
    active_scan:
      enabled: true
      policy: "Default Policy"
    spider:
      max_depth: 5
      max_children: 100
    
  single_page_app:
    scan_type: "spa"
    authentication:
      enabled: true
    selenium:
      enabled: true
      browser: "chrome"
      headless: true
    ajax_spider:
      enabled: true
      max_duration: 10
    
  api_service:
    scan_type: "api"
    openapi_spec: true
    authentication:
      type: "bearer_token"
    active_scan:
      policy: "API Scan Policy"

# Monitoring and health checks
monitoring:
  health_checks:
    enabled: true
    interval: 300  # 5 minutes
    
  metrics:
    enabled: true
    port: 9090
    endpoint: "/metrics"
    
  # System resources monitoring
  system:
    cpu_threshold: 80
    memory_threshold: 85
    disk_threshold: 90
    
# Development and testing
development:
  debug_mode: false
  test_mode: false
  mock_scans: false
  dry_run: false