# DAST Bare Version Configuration
# Simplified version without Grafana, Prometheus, Redis, PostgreSQL

# Local file-based storage
storage:
  type: "file"  # file-based storage instead of database
  data_directory: "data"
  reports_directory: "reports"
  logs_directory: "logs"

# Concurrent scanning limits
max_concurrent_scans: 2

# Logging configuration
log_level: "INFO"
log_file: "dast_monitor.log"

# Scan scheduling (file-based scheduling)
scan_schedules:
  high_priority: "*/10 * * * *"   # Every 10 minutes (priority 4-5)
  medium_priority: "*/30 * * * *" # Every 30 minutes (priority 2-3)
  low_priority: "0 */2 * * *"     # Every 2 hours (priority 1)

# ZAP configuration
zap:
  version: "2.14.0"
  timeout: 3600  # 1 hour timeout per scan
  memory: "2g"
  max_scan_time: 1800  # 30 minutes max active scan

# Google Workspace (Google Chat) integration - PRIMARY NOTIFICATION METHOD
google_workspace:
  enabled: true
  webhook_url: "${GOOGLE_WORKSPACE_WEBHOOK_URL}"
  space_name: "Security Monitoring"
  bot_name: "DAST Monitor"
  severity_threshold: "medium"
  message_style: "card"  # "simple", "card", "rich"
  thread_alerts: true  # Group related alerts in threads
  include_remediation: true
  max_card_fields: 10
  
  # Card formatting options
  card_options:
    include_target_info: true
    include_scan_duration: true
    include_vulnerability_count: true
    include_security_score: true
    color_coding: true  # Use colors based on severity
    
  # Advanced features
  advanced:
    mention_users: []  # List of user emails to mention on high severity
    tag_by_domain: true  # Tag messages by domain
    create_threads_by_target: true  # Create separate threads per target

# Backup notification methods
notifications:
  # Slack as backup
  slack:
    enabled: false
    webhook_url: "${SLACK_WEBHOOK_URL}"
    channel: "#security-alerts"
    severity_threshold: "high"
    
  # Email notifications
  email:
    enabled: false
    smtp_host: "smtp.gmail.com"
    smtp_port: 587
    username: "${EMAIL_USERNAME}"
    password: "${EMAIL_PASSWORD}"
    from_address: "dast-monitor@company.com"
    to_addresses: ["security-team@company.com"]

# File-based subdomain discovery
subdomain_discovery:
  enabled: true
  tools: 
    - "subfinder"
    - "assetfinder"
  update_frequency: "0 0 * * 0"  # Weekly on Sunday
  max_subdomains_per_domain: 50
  timeout: 300  # 5 minutes per tool
  output_file: "data/subdomains.json"

# Report management (file-based)
reports:
  retention_days: 90
  formats: ["json", "html", "xml", "sarif"]
  export_path: "reports"
  
  # File organization
  organization:
    by_domain: true
    by_date: true
    by_severity: false
  
  # Automatic cleanup
  cleanup:
    enabled: true
    schedule: "0 3 * * *"  # Daily at 3 AM
    
  # Report templates
  templates:
    executive_summary: true
    detailed_findings: true
    trend_analysis: false  # Disabled without time-series DB

# Simple file-based metrics
metrics:
  enabled: true
  output_format: "json"
  output_file: "data/metrics.json"
  collection_interval: 300  # 5 minutes
  
  # What to track
  track:
    - scan_duration
    - vulnerability_counts
    - target_status
    - scan_success_rate
    - security_scores

# Performance optimization
performance:
  scan_optimization:
    enabled: true
    skip_static_content: true
    max_crawl_depth: 5
    max_crawl_children: 100
    request_delay: 100  # milliseconds
    
  resource_limits:
    max_memory_per_scan: "4g"
    max_cpu_per_scan: 2
    disk_space_threshold: "10GB"

# Security settings
security:
  api_auth:
    enabled: true
    method: "token"
    tokens:
      - name: "admin"
        token: "${ADMIN_API_TOKEN}"
        permissions: ["read", "write", "admin"]
      - name: "readonly"
        token: "${READONLY_API_TOKEN}" 
        permissions: ["read"]
  
  network:
    allowed_ips: ["127.0.0.1", "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16"]
    rate_limiting:
      enabled: true
      requests_per_minute: 60

# CI/CD Integration (simplified)
cicd:
  enabled: true
  quality_gates:
    fail_on_high: true
    fail_on_medium: false
    max_alerts_threshold: 50
    
  # Output formats for CI/CD
  output:
    junit_xml: true
    sarif: true
    json_summary: true

# Target-specific configurations
target_profiles:
  web_application:
    scan_type: "standard"
    authentication:
      enabled: false
    active_scan:
      enabled: true
      policy: "Default Policy"
    spider:
      max_depth: 5
      max_children: 100
    
  single_page_app:
    scan_type: "spa"
    authentication:
      enabled: true
    selenium:
      enabled: true
      browser: "chrome"
      headless: true
    ajax_spider:
      enabled: true
      max_duration: 10
    
  api_service:
    scan_type: "api"
    openapi_spec: true
    authentication:
      type: "bearer_token"
    active_scan:
      policy: "API Scan Policy"

# Health monitoring (simplified)
monitoring:
  health_checks:
    enabled: true
    interval: 300  # 5 minutes
    output_file: "data/health.json"
    
  system:
    cpu_threshold: 80
    memory_threshold: 85
    disk_threshold: 90

# Development and testing
development:
  debug_mode: false
  test_mode: false
  mock_scans: false
  dry_run: false