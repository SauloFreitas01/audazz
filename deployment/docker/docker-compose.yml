services:
  # Main DAST monitoring application (bare version)
  dast-monitor:
    build: .
    container_name: dast-monitor-bare
    restart: unless-stopped
    volumes:
      - ../../config/dast_config.yaml:/app/dast_config.yaml:ro
      - ./reports:/app/reports:rw
      - ./logs:/app/logs:rw
      - ./data:/app/data:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro  # For running ZAP containers
    environment:
      - GOOGLE_WORKSPACE_WEBHOOK_URL=${GOOGLE_WORKSPACE_WEBHOOK_URL:-}
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL:-}
      - ADMIN_API_TOKEN=${ADMIN_API_TOKEN:-admin-token-change-me}
      - READONLY_API_TOKEN=${READONLY_API_TOKEN:-readonly-token-change-me}
    ports:
      - "8080:8080"  # API endpoint
    networks:
      - dast-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Subdomain discovery service (optional)
  subdomain-discovery:
    build:
      context: .
      dockerfile: Dockerfile.subdomain
    container_name: dast-subdomain-discovery-bare
    restart: unless-stopped
    volumes:
      - ./data:/app/data:rw
      - ./tools:/app/tools:ro
    networks:
      - dast-network
    profiles:
      - discovery

  # Cleanup service for old reports and logs
  cleanup:
    build:
      context: .
      dockerfile: Dockerfile.cleanup
    container_name: dast-cleanup-bare
    restart: unless-stopped
    volumes:
      - ./reports:/app/reports:rw
      - ./logs:/app/logs:rw
      - ./data:/app/data:rw
    environment:
      - RETENTION_DAYS=${RETENTION_DAYS:-90}
      - CLEANUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
    networks:
      - dast-network

# Networks
networks:
  dast-network:
    driver: bridge
    name: dast-network-bare